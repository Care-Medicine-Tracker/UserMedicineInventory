name: Pull Request
on: [ pull_request, push ]

env:
  DOTNET_VERSION: '5.0.x'

jobs:
  build:

    name: build-and-test-${{matrix.os}}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Install dependencies
      run: dotnet restore
      working-directory: src/Care.UserMedicineInventory.Service
      
    - name: Build
      run: dotnet build --configuration Release --no-restore
      working-directory: src/Care.UserMedicineInventory.Service

    - name: Publish
      run: dotnet publish src/Care.UserMedicineInventory.Service/Care.UserMedicineInventory.Service.csproj -c Release -o release --nologo
      
    - name: Persist workflow data as artifact
      uses: actions/upload-artifact@v3
      with:
        name: user-medicine-inventory-artifact
        path: /home/runner/work/UserMedicineInventory/UserMedicineInventory/release/

  analyse:
    name: Unit Tests
    needs: [ build ]
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3

      - name: Download workflow data
        uses: actions/download-artifact@v3
        with:
          name: user-medicine-inventory-artifact
          path: /home/runner/work/UserMedicineInventory/UserMedicineInventory/src/Care.UserMedicineInventory.Service/release/
      
      - name: Test
        run: dotnet test --no-restore --verbosity normal
        working-directory: src/Tests
              
      - name: Persist workflow data as artifact
        uses: actions/upload-artifact@v3
        with:
          name: user-medicine-inventory-artifact
          path: /home/runner/work/UserMedicineInventory/UserMedicineInventory/release/
    
  docker:
    name: Docker Build
    needs: [ analyse ]
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3

      - name: Download workflow data
        uses: actions/download-artifact@v3
        with:
          name: user-medicine-inventory-artifact
          path: /home/runner/work/UserMedicineInventory/UserMedicineInventory/src/Care.UserMedicineInventory.Service/release/
          
      - name: Build the Docker image
        working-directory: src/Care.UserMedicineInventory.Service
        run: docker build . --file Dockerfile --tag care-user-medicine-inventory
        
        
  security-code-scan:
    name: Security Code Scan
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2

      - name: Download workflow data
        uses: actions/download-artifact@v3
        with:
          name: user-medicine-inventory-artifact
          path: /home/runner/work/UserMedicineInventory/UserMedicineInventory/src/Care.UserMedicineInventory.Service/release/
      
      - name: Set up projects
        uses: security-code-scan/security-code-scan-add-action@v1.2

      - name: Build
        run: |
          dotnet restore
          dotnet build
        
      - name: Convert sarif for uploading to GitHub
        uses: security-code-scan/security-code-scan-results-action@v1.3
        
      - name: Upload sarif	
        uses: github/codeql-action/upload-sarif@v1
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        

  sonarcloud:
    name: SonarCloud
    runs-on: windows-latest
        
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
          
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  
          # Shallow clones should be disabled for a better relevancy of analysis          
          
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
            
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
          
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
          
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"vcaf_UserMedicineInventory" /o:"vcaf" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build src/Care.UserMedicineInventory.Service/Care.UserMedicineInventory.Service.csproj -c Release -o release --nologo
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
